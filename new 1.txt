from django.shortcuts import render
from king_admin import utils
# Create your views here.

from king_admin import king_admin
def index(request):
    # print(king_admin.enabled_admins['crm']['customer'].model.objects.ge)
    table_list = king_admin.enabled_admins
    return render(request, 'king_admin/table_index.html', {'table_list':table_list})


def display_table(request,app_name,table_name):
    from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger
    # admin_class规定了显示的内容，并且还有model属性，所以将admin_class传入前端
    admin_class = king_admin.enabled_admins[app_name][table_name]

    # table_name 开头字母为小写，无法getattr
    # models_module = importlib.import_module('%s.models'%(app_name))
    # model_obj = getattr(models_module, table_name)

    # <!--分页功能>
    # 得到表的对象的列表，因为 Paginator 第一个参数必须是可迭代的，第二个参数是每页展示的个数
    # model_all = admin_class.model.objects.all()
    model_all,filter_conditions = utils.table_filter(request, admin_class)

    # 传入 list_per_page 作为每页的数据量，保证检索前与检索后展示相同的数据量
    paginator = Paginator(model_all,admin_class.list_per_page)
    current_page = request.GET.get('page')


    try:
        # paginator.page()得到的是一页的对象列表，所以前端不用再对
        # admin_class.model.objects.all()进行循环，而是循环posts
        posts = paginator.page(current_page)

    # 防止用户输入非法字符
    except PageNotAnInteger:
        posts = paginator.page(1)
    except EmptyPage:
        posts = paginator.page(paginator.num_pages)

    return render(request,'king_admin/table_obj.html',{'admin_class':admin_class, 'posts':posts, 'filter_conditions':filter_conditions})